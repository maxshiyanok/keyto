{"version":3,"file":"static/js/762.a6470467.chunk.js","mappings":"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","sources":["webpack://ddd-tpl-react/./src/app/auth/components/AuthLayout/style.module.scss?99d7","app/auth/components/AuthLayout/AuthLayout.tsx","webpack://ddd-tpl-react/./src/app/auth/components/forgotPassword/style.module.scss?be3f","app/auth/components/forgotPassword/ForgotPassword.page.tsx","webpack://ddd-tpl-react/./src/components/Button/button.module.scss?3bf9","components/Button/Button.tsx","components/Input/Input.tsx","webpack://ddd-tpl-react/./src/components/Input/input.module.scss?f849"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__b9gz8\",\"title\":\"style_title__MQgBc\"};","import React, { ReactNode } from 'react'\nimport s from './style.module.scss'\ninterface Props {\n    children: ReactNode,\n    title: string\n}\nexport default function AuthLayout({ children, title }: Props) {\n    return (\n        <div className={s.container}>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"style_description__Ro12q\",\"container\":\"style_container__hrs2m\"};","import React, { ChangeEvent, FormEvent, useState } from 'react'\nimport s from './style.module.scss'\nimport Input from 'components/Input/Input'\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport AuthLayout from '../AuthLayout/AuthLayout';\nimport Button from 'components/Button/Button';\nimport { useAppDispatch } from 'storeTypes';\nimport { setReduxEmail } from 'app/auth/store/auth.slice';\nimport { useNavigate } from 'react-router-dom';\nimport repository from 'repository';\nexport default function ForgotPassword() {\n    const [email, setEmail] = useState('')\n    const [isErrors, setIsErrors] = useState(false)\n    const [requestError, setRequestError] = useState<string | null>(null)\n\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const YupSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"invalid email\")\n            .required('required'),\n\n    });\n\n    const handleInputBlur = async () => {\n        YupSchema\n            .validate({ email })\n            .then(function (value) {\n                setIsErrors(false); // returns car object\n            })\n            .catch(function (err) {\n                setIsErrors(true)\n            });\n    }\n    const handleButtonClick = async () => {\n        setRequestError(null)\n        try {\n            if (isErrors || !email) {\n                setIsErrors(true)\n                return\n            }\n            dispatch(setReduxEmail(email))\n            const res = await repository.post('/auth/forgot-password', { email })\n            navigate('/auth/change-password')\n        } catch (error: any) {\n            setRequestError(error.response.data.message)\n        }\n    }\n    return (\n        <AuthLayout title='Забыли пароль?'>\n            <div className={s.container}>\n                <p className={s.description}>Напишите вашу электронную почту, чтобы восстановить пароль</p>\n                <div>\n                    <Input\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"Email\"\n                        placeholder='Enter your email'\n                        value={email}\n                        onBlur={handleInputBlur}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n                        type='text' />\n                    {isErrors && <p className='error'>Invalid email</p>}\n                    {requestError && <p className='error'>{requestError}</p>}\n                </div>\n                <Button text='Отправить на почту' onClick={handleButtonClick} />\n            </div>\n        </AuthLayout >\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"button_error__YkJvg\",\"title\":\"button_title__5gC+I\",\"text\":\"button_text__XVH8C\",\"dataContainer\":\"button_dataContainer__3jkmu\",\"button\":\"button_button__hP9LU\",\"container\":\"button_container__Qvxz+\"};","import React from 'react'\nimport s from './button.module.scss'\nimport { type } from 'os'\ntype ButtonType = 'button' | 'submit'\ninterface Props {\n    text: string,\n    type?: ButtonType,\n    onClick?: () => void\n}\nexport default function Button(props: Props) {\n    const { text, type = 'button' , ...rest} = props\n    return (\n        <div className={s.container}>\n            <button type={type} {...rest} className={s.button}>{text}</button>\n        </div>\n    )\n}\n","import React, { ChangeEvent } from 'react'\nimport s from './input.module.scss'\ntype InputType = 'text' | 'number'\n\ninterface Props {\n    type?: InputType,\n    placeholder?: string,\n    //formik props\n    id?: string,\n    name?: string,\n    label?: string,\n    value?: string\n    onChange?: (e: ChangeEvent<any>) => void\n    onBlur?: (e: ChangeEvent<any>) => void\n    error?: boolean | undefined\n    helperText?: string | false | undefined\n}\nexport default function Input(props: Props) {\n    const { type = 'text', placeholder, helperText, error, ...rest } = props\n    return (\n        <div>\n            <input placeholder={placeholder} {...rest} type={type} className={s.input} />\n            {error && <p className='error'>{helperText}</p>}\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"input_error__OfYDR\",\"title\":\"input_title__xtmVx\",\"text\":\"input_text__aUjj7\",\"dataContainer\":\"input_dataContainer__Ia7H8\",\"input\":\"input_input__VaHsI\",\"icon\":\"input_icon__7BwGD\",\"container\":\"input_container__Hru8f\",\"date\":\"input_date__wBhL9\",\"label\":\"input_label__Wq-Ey\"};"],"names":["AuthLayout","_ref","children","title","_jsxs","className","s","container","_jsx","ForgotPassword","email","setEmail","useState","isErrors","setIsErrors","requestError","setRequestError","dispatch","useAppDispatch","navigate","useNavigate","YupSchema","Yup","shape","required","description","Input","id","name","label","placeholder","value","onBlur","async","validate","then","catch","err","onChange","e","target","type","Button","text","onClick","setReduxEmail","repository","post","error","response","data","message","props","rest","button","helperText","input"],"sourceRoot":""}