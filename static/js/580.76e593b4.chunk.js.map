{"version":3,"file":"static/js/580.76e593b4.chunk.js","mappings":"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","sources":["app/main/components/Main/helper.ts","webpack://ddd-tpl-react/./src/app/sovmestimost/components/style.module.scss?9002","app/sovmestimost/components/Conscious/Constious.tsx","app/sovmestimost/components/mission/Mission.tsx","app/sovmestimost/components/Year/Year.tsx","app/sovmestimost/components/Realization/Realiz.tsx","app/sovmestimost/components/Itog/Itog.tsx","assets/BigSVG/Razbor_Sovmestimosty-left.tsx","app/sovmestimost/components/Sovmestimost.page.tsx","api/sovmestimost.ts"],"sourcesContent":["export default function sumDigits(num1: number, num2: number, num3: number) {\n    const str = num1.toString() + num2.toString() + num3.toString()\n    const arr = str.split('')\n    const res = arr.reduce((sum, digit) => sum + +digit, 0);\n    if (res > 9) {\n        return sumOneDigits(res)\n    }\n    return res\n\n}\nexport function sumOneDigits(n: string | number): number {\n    const str = n.toString()\n    const arr = str.split('')\n    const res = arr.reduce((sum, digit) => sum + +digit, 0);\n    if (res > 9) {\n        return sumOneDigits(res)\n    }\n    return res\n}\n\nfunction sumOfDigits(number: number): number {\n    if (number < 10) {\n        return number\n    }\n    // Преобразуем число в строку, чтобы удобно было работать с каждой цифрой\n    let str = number.toString();\n    let sum = 0;\n\n    // Проходим по каждой цифре строки и добавляем её значение к сумме\n    for (let i = 0; i < str.length; i++) {\n        sum += parseInt(str[i]);\n    }\n\n    return sumOfDigits(+sum);\n};\nexport function dateConverter(dateString: Date) {\n    // Исходная строка даты\n\n    // Преобразуем строку в объект Date\n    const date = new Date(dateString);\n\n    // Извлекаем день, месяц и год\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\n    const year = date.getFullYear();\n\n    // Формируем строку в формате dd.mm.yyyy\n    const formattedDate = `${day}.${month}.${year}`;\n\n    return formattedDate\n}","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"style_error__8NDCM\",\"title\":\"style_title__QtvA0\",\"text\":\"style_text__GTvbT\",\"dataContainer\":\"style_dataContainer__u9-lq\",\"container\":\"style_container__vGAey\",\"bigSvg\":\"style_bigSvg__Z-QtJ\",\"dateContainer\":\"style_dateContainer__5V8vK\"};","import React from 'react'\nimport { useParams } from 'react-router-dom'\ntype Props = {\n    text: string,\n    number: number | string\n}\nexport default function Constious(props: Props) {\n    const { text, number } = props\n\n    return (\n        <>\n            <div className='title'>ОБЩЕЕ Число Сознания — {number}</div>\n            <div className='text'>{text}</div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\ntype Props = {\n    text: string,\n    number : string | number\n}\nexport default function Mission(props: Props) {\n    const { text, number } = props\n    return (\n        <>\n            <div className='title'>ОБЩЕЕ Число МИССИИ — {number}</div>\n            <div className='text'>{text}</div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\ntype Props = {\n    text: string,\n    number: number\n}\nexport default function Year(props: Props) {\n    const { text, number } = props\n    return (\n        <>\n            <div className='title'>ВАШ ОБЩИЙ ЛИЧНЫЙ ГОД — {number}</div>\n            <div className='text'>{text}</div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\ntype Props = {\n    text: string,\n    number: number\n}\nexport default function Realization(props: Props) {\n    const { text,number } = props\n    return (\n        <>\n            <div className='title'>ОБЩЕЕ Число РЕАЛИЗАЦИИ — {number}</div>\n            <div className='text'>{text}</div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\ntype Props = {\n    text: string,\n    number: string | number\n}\nexport default function Itog(props: Props) {\n    const { text,number } = props\n    return (\n        <>\n            <div className='title'>ИТОГ СОВМЕСТИМОСТИ — {number}</div>\n            <div className='text'>{text}</div>\n\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function RazborSovmestimostyLeft() {\n  return (\n    <svg width=\"100%\" height=\"auto\" viewBox=\"0 0 1253 235\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.81883 95.4146V1.98512H55.7795C67.5194 1.98512 76.1464 5.7223 81.6606 13.1967C86.1965 19.2473 87.3527 25.7874 85.1292 32.8168C82.9058 40.1132 77.7473 45.3631 69.6539 48.5664C64.9402 50.435 59.6483 51.3693 53.7784 51.3693H29.6316V95.4146H6.81883ZM31.2325 5.98924L30.6988 6.6566C30.2541 7.1015 29.8984 7.41293 29.6316 7.59089V47.4986H44.4398C49.3315 47.4986 53.4226 46.0749 56.7134 43.2276C60.0041 40.3802 62.0052 36.9544 62.7167 32.9503C63.5172 28.8572 63.5172 24.7641 62.7167 20.671C62.0052 16.5779 60.0041 13.1077 56.7134 10.2603C53.4226 7.41293 49.4204 5.98924 44.7067 5.98924H31.2325Z\" fill=\"black\"/>\n<path d=\"M86.8239 95.4146H82.4215L110.437 22.2727L105.901 11.7285L122.577 0.25H125.512L167.402 95.4146H142.188L133.783 75.6609H94.1613L86.8239 95.4146ZM112.572 27.6115L95.4954 71.7903H132.049L112.572 27.6115Z\" fill=\"black\"/>\n<path d=\"M206.325 97.1497C198.943 97.1497 192.05 95.3256 185.647 91.6774C179.243 87.9402 173.996 82.8239 169.905 76.3283L173.24 74.3262C176.886 80.1989 181.645 84.8704 187.515 88.3406C193.473 91.8109 199.477 93.546 205.525 93.546C214.152 93.546 220.244 89.9868 223.801 82.8684C227.003 76.5507 227.359 69.8772 224.869 62.8477C222.378 55.6403 217.754 50.9244 210.994 48.6999C208.593 47.899 206.014 47.4986 203.257 47.4986V43.628C211.973 43.628 218.109 40.0688 221.667 32.9503C224.602 27.0776 224.913 21.0269 222.601 14.7983C220.377 8.83662 216.597 5.32189 211.261 4.25412C210.283 4.07616 209.304 3.98718 208.326 3.98718C202.367 3.98718 196.408 5.7223 190.449 9.19254C184.58 12.6628 179.821 17.3342 176.175 23.207L172.84 21.0714C176.931 14.5759 182.178 9.50397 188.582 5.85578C194.985 2.20758 201.834 0.383477 209.127 0.383477C223.09 0.383477 233.273 4.07617 239.677 11.4615C244.48 17.1563 245.814 23.2959 243.679 29.8805C241.456 36.554 236.297 41.448 228.204 44.5623C227.492 44.8292 226.736 45.0961 225.936 45.3631C236.342 48.1215 243.19 53.2379 246.481 60.7122C249.505 67.6527 248.749 74.5042 244.213 81.2667C238.788 89.2749 229.805 94.3023 217.264 96.3489C213.707 96.8828 210.06 97.1497 206.325 97.1497Z\" fill=\"black\"/>\n<path d=\"M264.775 1.98512H328.411V5.85578H289.322L287.588 7.59089V44.1619H311.735C324.364 44.1619 333.614 48.1215 339.484 56.0407C344.02 62.3584 345.265 69.2098 343.219 76.5952C341.085 84.0696 336.149 89.4084 328.411 92.6117C324.142 94.4803 319.295 95.4146 313.869 95.4146H264.775V1.98512ZM302.53 47.3652H287.588V89.6754L289.322 91.4105H302.797C306.176 91.4105 309.2 90.6096 311.868 89.008C314.625 87.4063 316.671 85.3153 318.005 82.7349C319.428 80.0655 320.451 77.1736 321.073 74.0593C321.785 70.945 321.785 67.8307 321.073 64.7163C320.451 61.602 319.428 58.7547 318.005 56.1742C316.671 53.5048 314.625 51.3693 311.868 49.7676C309.111 48.166 305.998 47.3652 302.53 47.3652Z\" fill=\"black\"/>\n<path d=\"M354.122 48.6999C354.122 39.4459 356.612 31.0817 361.593 23.6074C366.662 16.133 373.288 10.3938 381.471 6.38965C389.742 2.29655 398.636 0.25 408.152 0.25C417.758 0.25 426.651 2.29655 434.834 6.38965C443.105 10.4828 449.731 16.2665 454.712 23.7408C459.692 31.2152 462.182 39.5794 462.182 48.8333C462.182 62.7143 456.846 74.2373 446.174 83.4022C435.59 92.5672 422.916 97.1497 408.152 97.1497C393.388 97.1497 380.67 92.5672 369.998 83.4022C359.414 74.1483 354.122 62.5808 354.122 48.6999ZM408.152 4.25412C399.169 4.25412 391.832 7.85783 386.14 15.0652C380.537 22.1837 377.735 33.3952 377.735 48.6999C377.735 63.7376 380.537 74.9491 386.14 82.3345C391.743 89.6309 399.081 93.2791 408.152 93.2791C417.135 93.2791 424.428 89.7198 430.031 82.6014C435.723 75.394 438.569 64.138 438.569 48.8333C438.569 33.7066 435.768 22.4951 430.165 15.1987C424.561 7.90232 417.224 4.25412 408.152 4.25412Z\" fill=\"black\"/>\n<path d=\"M472.183 95.4146V1.98512H521.143C532.883 1.98512 541.51 5.7223 547.025 13.1967C551.56 19.2473 552.717 25.7874 550.493 32.8168C548.27 40.1132 543.111 45.3631 535.018 48.5664C530.304 50.435 525.012 51.3693 519.142 51.3693H494.996V95.4146H472.183ZM496.596 5.98924L496.063 6.6566C495.618 7.1015 495.262 7.41293 494.996 7.59089V47.4986H509.804C514.695 47.4986 518.787 46.0749 522.077 43.2276C525.368 40.3802 527.369 36.9544 528.081 32.9503C528.881 28.8572 528.881 24.7641 528.081 20.671C527.369 16.5779 525.368 13.1077 522.077 10.2603C518.787 7.41293 514.784 5.98924 510.071 5.98924H496.596Z\" fill=\"black\"/>\n<path d=\"M0.148438 186.185C0.148438 172.571 5.39581 161.092 15.8906 151.749C26.3853 142.406 39.1925 137.735 54.312 137.735C61.605 137.913 68.4088 139.826 74.7234 143.474C81.127 147.122 86.3299 152.194 90.3321 158.69L86.9969 160.825C83.4394 155.219 78.6812 150.637 72.7223 147.078C66.7634 143.43 60.6267 141.605 54.312 141.605C45.4182 141.605 38.1252 145.254 32.4331 152.55C26.7411 159.846 23.895 171.058 23.895 186.185C23.895 201.044 26.7855 212.256 32.5665 219.819C38.3475 227.294 45.7294 231.031 54.7122 231.031C61.0269 231.031 67.1636 229.251 73.1225 225.692C79.0814 222.044 83.8396 217.417 87.3972 211.811L90.7324 213.813C86.6412 220.309 81.3938 225.425 74.9902 229.162C68.5867 232.81 61.6939 234.635 54.312 234.635C39.5482 234.635 26.83 230.052 16.1574 220.887C5.48475 211.633 0.148437 200.066 0.148438 186.185Z\" fill=\"black\"/>\n<path d=\"M97.3381 186.185C97.3381 176.931 99.8284 168.567 104.809 161.092C109.878 153.618 116.504 147.879 124.687 143.874C132.958 139.781 141.852 137.735 151.368 137.735C160.974 137.735 169.868 139.781 178.05 143.874C186.321 147.968 192.947 153.751 197.928 161.226C202.908 168.7 205.398 177.064 205.398 186.318C205.398 200.199 200.062 211.722 189.39 220.887C178.806 230.052 166.132 234.635 151.368 234.635C136.604 234.635 123.886 230.052 113.214 220.887C102.63 211.633 97.3381 200.066 97.3381 186.185ZM151.368 141.739C142.385 141.739 135.048 145.343 129.356 152.55C123.753 159.669 120.951 170.88 120.951 186.185C120.951 201.222 123.753 212.434 129.356 219.819C134.959 227.116 142.297 230.764 151.368 230.764C160.351 230.764 167.644 227.205 173.247 220.086C178.939 212.879 181.785 201.623 181.785 186.318C181.785 171.191 178.984 159.98 173.381 152.684C167.777 145.387 160.44 141.739 151.368 141.739Z\" fill=\"black\"/>\n<path d=\"M215.399 139.47H260.624C267.117 139.47 272.675 140.716 277.3 143.207C282.014 145.61 285.216 148.679 286.905 152.417C288.684 156.065 289.44 159.891 289.173 163.895C288.907 167.81 287.128 171.503 283.837 174.973C280.635 178.443 276.366 180.979 271.03 182.581C275.744 183.471 279.835 185.072 283.303 187.386C286.861 189.61 289.485 192.235 291.174 195.261C292.864 198.286 293.976 201.534 294.51 205.004C295.043 208.474 294.688 211.856 293.442 215.148C292.197 218.351 290.374 221.287 287.973 223.957C285.66 226.626 282.414 228.806 278.234 230.497C274.143 232.099 269.518 232.899 264.359 232.899H215.399V139.47ZM238.212 227.294L239.946 229.029H253.287C256.666 229.029 259.69 228.228 262.358 226.626C265.115 224.936 267.206 222.8 268.629 220.22C270.052 217.639 271.074 214.792 271.697 211.678C272.408 208.563 272.408 205.449 271.697 202.335C271.074 199.131 270.052 196.239 268.629 193.659C267.206 191.079 265.115 188.988 262.358 187.386C259.69 185.695 256.577 184.85 253.02 184.85H238.212V227.294ZM238.212 144.942V180.979H248.751C253.376 180.979 257.289 179.689 260.491 177.109C263.692 174.528 265.649 171.414 266.361 167.766C267.161 164.029 267.161 160.336 266.361 156.688C265.649 152.95 263.692 149.792 260.491 147.211C257.289 144.631 253.376 143.341 248.751 143.341H239.946L238.212 144.942Z\" fill=\"black\"/>\n<path d=\"M308.432 232.899H304.563L312.968 139.47H335.38L362.195 203.402L388.077 139.47H409.822L417.96 232.899H395.014L387.81 150.415L354.191 234.635H350.856L315.769 151.082L308.432 232.899Z\" fill=\"black\"/>\n<path d=\"M434.662 232.899V139.47H490.96V143.474H459.209C458.497 144.186 457.919 144.72 457.475 145.076V180.979H475.351V184.983H457.475V227.294L459.209 229.029H495.096V232.899H434.662Z\" fill=\"black\"/>\n<path d=\"M500.428 186.185C500.428 172.571 505.675 161.092 516.17 151.749C526.665 142.406 539.472 137.735 554.591 137.735C561.884 137.913 568.688 139.826 575.003 143.474C581.406 147.122 586.609 152.194 590.611 158.69L587.276 160.825C583.719 155.219 578.961 150.637 573.002 147.078C567.043 143.43 560.906 141.605 554.591 141.605C545.697 141.605 538.404 145.254 532.712 152.55C527.02 159.846 524.174 171.058 524.174 186.185C524.174 201.044 527.065 212.256 532.846 219.819C538.627 227.294 546.009 231.031 554.992 231.031C561.306 231.031 567.443 229.251 573.402 225.692C579.361 222.044 584.119 217.417 587.676 211.811L591.012 213.813C586.92 220.309 581.673 225.425 575.27 229.162C568.866 232.81 561.973 234.635 554.591 234.635C539.828 234.635 527.109 230.052 516.437 220.887C505.764 211.633 500.428 200.066 500.428 186.185Z\" fill=\"black\"/>\n<path d=\"M614.186 143.474H590.973V139.47H663.547V143.474H640.334C640.245 143.563 640.023 143.83 639.667 144.275C639.311 144.631 639 144.898 638.733 145.076V232.899H615.787V145.076C615.52 144.898 615.209 144.631 614.853 144.275C614.497 143.83 614.275 143.563 614.186 143.474Z\" fill=\"black\"/>\n<path d=\"M670.21 139.47H693.023V222.622L729.443 139.47H752.256V232.899H729.443V149.614L693.023 232.899H670.21V139.47Z\" fill=\"black\"/>\n<path d=\"M772.754 232.899H768.885L777.29 139.47H799.702L826.517 203.402L852.398 139.47H874.144L882.282 232.899H859.335L852.131 150.415L818.513 234.635H815.177L780.091 151.082L772.754 232.899Z\" fill=\"black\"/>\n<path d=\"M885.669 186.185C885.669 176.931 888.159 168.567 893.14 161.092C898.209 153.618 904.835 147.879 913.018 143.874C921.289 139.781 930.183 137.735 939.699 137.735C949.304 137.735 958.198 139.781 966.381 143.874C974.652 147.968 981.278 153.751 986.258 161.226C991.239 168.7 993.729 177.064 993.729 186.318C993.729 200.199 988.393 211.722 977.72 220.887C967.137 230.052 954.463 234.635 939.699 234.635C924.935 234.635 912.217 230.052 901.544 220.887C890.961 211.633 885.669 200.066 885.669 186.185ZM939.699 141.739C930.716 141.739 923.379 145.343 917.687 152.55C912.084 159.669 909.282 170.88 909.282 186.185C909.282 201.222 912.084 212.434 917.687 219.819C923.29 227.116 930.627 230.764 939.699 230.764C948.682 230.764 955.975 227.205 961.578 220.086C967.27 212.879 970.116 201.623 970.116 186.318C970.116 171.191 967.314 159.98 961.711 152.684C956.108 145.387 948.771 141.739 939.699 141.739Z\" fill=\"black\"/>\n<path d=\"M1000.45 186.185C1000.45 172.571 1005.69 161.092 1016.19 151.749C1026.68 142.406 1039.49 137.735 1054.61 137.735C1061.9 137.913 1068.71 139.826 1075.02 143.474C1081.43 147.122 1086.63 152.194 1090.63 158.69L1087.3 160.825C1083.74 155.219 1078.98 150.637 1073.02 147.078C1067.06 143.43 1060.92 141.605 1054.61 141.605C1045.72 141.605 1038.42 145.254 1032.73 152.55C1027.04 159.846 1024.19 171.058 1024.19 186.185C1024.19 201.044 1027.08 212.256 1032.86 219.819C1038.65 227.294 1046.03 231.031 1055.01 231.031C1061.32 231.031 1067.46 229.251 1073.42 225.692C1079.38 222.044 1084.14 217.417 1087.7 211.811L1091.03 213.813C1086.94 220.309 1081.69 225.425 1075.29 229.162C1068.88 232.81 1061.99 234.635 1054.61 234.635C1039.85 234.635 1027.13 230.052 1016.46 220.887C1005.78 211.633 1000.45 200.066 1000.45 186.185Z\" fill=\"black\"/>\n<path d=\"M1114.2 143.474H1090.99V139.47H1163.57V143.474H1140.35C1140.26 143.563 1140.04 143.83 1139.69 144.275C1139.33 144.631 1139.02 144.898 1138.75 145.076V232.899H1115.81V145.076C1115.54 144.898 1115.23 144.631 1114.87 144.275C1114.52 143.83 1114.29 143.563 1114.2 143.474Z\" fill=\"black\"/>\n<path d=\"M1170.23 139.47H1193.04V222.622L1229.46 139.47H1252.27V232.899H1229.46V149.614L1193.04 232.899H1170.23V139.47Z\" fill=\"black\"/>\n</svg>\n\n  )\n}\n","import { getSovmestimostData } from 'api/sovmestimost'\nimport React, { useEffect, useState } from 'react'\nimport { useParams, useSearchParams } from 'react-router-dom'\nimport s from './style.module.scss'\nimport Constious from './Conscious/Constious';\nimport Mission from './mission/Mission';\nimport Year from './Year/Year';\nimport Realization from './Realization/Realiz';\nimport Itog from './Itog/Itog';\nimport Razbor_Sovmestimosty from 'assets/BigSVG/Razbor_Sovmestimosty';\nimport RazborSovmestimostyLeft from 'assets/BigSVG/Razbor_Sovmestimosty-left';\nimport { getPersonalData } from 'api/personal';\nimport sumDigits, { dateConverter, sumOneDigits } from 'app/main/components/Main/helper';\nimport Conscious from 'app/personal/components/Conscious';\nimport Implementation from 'app/personal/components/Implementation/Implementation';\nimport Matrix from 'app/personal/components/Matrix/Matrix';\n\nconst componentsSections = new Map<any, any>([\n  [\"сознание\", Constious],\n  [\"миссия\", Mission],\n  [\"год\", Year],\n  [\"реализация\", Realization],\n  [\"итог\", Itog],\n\n\n]);\n\nexport default function SovmestimostPage() {\n  const [data, setData] = useState<any[]>([])\n  useEffect(() => {\n    async function getData() {\n      const res = await getSovmestimostData().then(res => res)\n      setData(res.sections)\n    }\n    getData()\n  }, [])\n  let [searchParams, _] = useSearchParams();\n  const param = searchParams.get('date1')\n  const param2 = searchParams.get('date2')\n\n  if (!param || !param2) return null\n  const date = new Date(+param)\n  const date2 = new Date(+param2)\n  const day2 = date2.getDate()\n  const year2 = date2.getFullYear()\n  const month2 = date2.getMonth() + 1\n  const day = date.getDate()\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const currentYear = new Date().getFullYear()\n  const sumOfDays = sumOneDigits(day + day2)\n  const missionNumb = sumDigits(day + day2, month + month2, year + year2)\n  const implementationNumber = sumDigits(missionNumb, sumOfDays, 0)\n  const personalYear = sumDigits(day + day2, month + month2, currentYear)\n  const itogNumber = sumDigits(implementationNumber, missionNumb, sumOfDays)\n  const date1Conv = dateConverter(date)\n  const date2Conv = dateConverter(date2)\n  if (!data.length) {\n    return <></>\n  }\n  console.log(data)\n  return (\n    <div className={s.container}>\n      <div className={s.bigSvg}>\n        <RazborSovmestimostyLeft />\n      </div>\n      <div className='dataContainer'>\n        <div className={s.dateContainer}>\n          <div>\n            {date1Conv}\n          </div>\n          <div>\n            {date2Conv}\n          </div>\n        </div>\n        <div className='title'>ВАШ КОД СОВМЕСТИМОСТИ</div>\n        <Constious number={sumOfDays} {...data[0].data[sumOfDays]} />\n        <Mission number={missionNumb} {...data[1].data[missionNumb]} />\n        <Year number={personalYear} {...data[2].data[personalYear]} />\n        <Realization number={implementationNumber} {...data[3].data[implementationNumber]} />\n        <Itog number={itogNumber} {...data[4].data[itogNumber]} />\n        {/* <Implementation number={implementationNumber} {...data[2].data[implementationNumber]} /> */}\n        {/* <Matrix {...data[4].data[1]} dateNumbers={day.toString() + month.toString() + year.toString()} /> */}\n      </div>\n    </div>\n  )\n}\n","import data from '../../src/data/sovmestimost.json'\nexport function getSovmestimostData() {\n    return new Promise<{ sections: any[] }>(resolve => {\n        setTimeout(resolve, 0, data)\n    })\n}\n"],"names":["sumDigits","num1","num2","num3","res","toString","split","reduce","sum","digit","sumOneDigits","n","dateConverter","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","Constious","props","text","number","_jsxs","_Fragment","children","className","_jsx","Mission","Year","Realization","Itog","RazborSovmestimostyLeft","width","height","viewBox","fill","xmlns","d","Map","SovmestimostPage","data","setData","useState","useEffect","async","Promise","resolve","setTimeout","then","sections","getData","searchParams","_","useSearchParams","param","get","param2","date2","day2","year2","month2","currentYear","sumOfDays","missionNumb","implementationNumber","personalYear","itogNumber","date1Conv","date2Conv","length","console","log","s","container","bigSvg","dateContainer"],"sourceRoot":""}