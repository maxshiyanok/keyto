{"version":3,"file":"static/js/809.a85ad602.chunk.js","mappings":"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","sources":["webpack://ddd-tpl-react/./src/app/auth/components/AuthLayout/style.module.scss?99d7","app/auth/components/AuthLayout/AuthLayout.tsx","webpack://ddd-tpl-react/./src/app/auth/components/ChangePassword/style.module.scss?4529","app/auth/components/ChangePassword/ChangePassword.page.tsx","webpack://ddd-tpl-react/./src/components/Button/button.module.scss?3bf9","components/Button/Button.tsx","components/Input/Input.tsx","components/Input/InputPassword.tsx","webpack://ddd-tpl-react/./src/components/Input/input.module.scss?f849"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__b9gz8\",\"title\":\"style_title__MQgBc\"};","import React, { ReactNode } from 'react'\nimport s from './style.module.scss'\ninterface Props {\n    children: ReactNode,\n    title: string\n}\nexport default function AuthLayout({ children, title }: Props) {\n    return (\n        <div className={s.container}>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"style_formContainer__UtOaK\",\"form\":\"style_form__QTYhm\"};","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport AuthLayout from '../AuthLayout/AuthLayout'\nimport Button from 'components/Button/Button'\nimport Input from 'components/Input/Input'\nimport repository from 'repository'\nimport InputPassword from 'components/Input/InputPassword'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport { useAppDispatch, useAppSelector } from 'storeTypes'\nimport { changePassword } from 'app/auth/store/auth.actions'\nimport { useNavigate } from 'react-router-dom'\nimport { authSelector } from 'app/auth/store/auth.selectors'\nimport s from './style.module.scss'\nexport default function ChangePassword() {\n    const { errors, pending, email } = useAppSelector(authSelector)\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const YupSchema = Yup.object().shape({\n        resetToken: Yup.string()\n            .required('required'),\n        password: Yup.string()\n            .required('required'),\n        password_confirm: Yup.string()\n            .required('required')\n\n    });\n    const formik = useFormik({\n        initialValues: {\n            resetToken: '',\n            password: '',\n            password_confirm: '',\n        },\n        validationSchema: YupSchema,\n        onSubmit: async (value) => {\n            const result = await dispatch(changePassword({\n                email,\n                ...value\n            })).unwrap()\n            if (result) {\n                navigate('/')\n            }\n        },\n    });\n    useEffect(() => {\n        if (!email) navigate('/auth/forgot-password')\n\n    }, [])\n\n    return (\n        <AuthLayout title='Введите полученный код'>\n            <div className={s.formContainer}>\n                <form className={s.form} onSubmit={formik.handleSubmit}>\n                    <Input\n                        id=\"resetToken\"\n                        name=\"resetToken\"\n                        label=\"resetToken\"\n                        placeholder='Enter your resetToken'\n                        value={formik.values.resetToken}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        error={formik.touched.resetToken && Boolean(formik.errors.resetToken)}\n                        helperText={formik.touched.resetToken && formik.errors.resetToken}\n                    />\n                    <InputPassword\n                        id=\"password\"\n                        name=\"password\"\n                        label=\"password\"\n                        placeholder='Enter your password'\n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        error={formik.touched.password && Boolean(formik.errors.password)}\n                        helperText={formik.touched.password && formik.errors.password}\n                    />\n                    <InputPassword\n                        id=\"password_confirm\"\n                        name=\"password_confirm\"\n                        label=\"password_confirm\"\n                        placeholder='Confirm password'\n                        value={formik.values.password_confirm}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        error={formik.touched.password_confirm && Boolean(formik.errors.password_confirm)}\n                        helperText={formik.touched.password_confirm && formik.errors.password_confirm}\n                    />\n                    {errors.resetCode && <p className='error'>{errors.resetCode}</p>}\n                    <Button text='Изменить пароль' type='submit' />\n                </form >\n            </div>\n\n        </AuthLayout>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"button_error__YkJvg\",\"title\":\"button_title__5gC+I\",\"text\":\"button_text__XVH8C\",\"dataContainer\":\"button_dataContainer__3jkmu\",\"button\":\"button_button__hP9LU\",\"container\":\"button_container__Qvxz+\"};","import React from 'react'\nimport s from './button.module.scss'\nimport { type } from 'os'\ntype ButtonType = 'button' | 'submit'\ninterface Props {\n    text: string,\n    type?: ButtonType,\n    onClick?: () => void\n}\nexport default function Button(props: Props) {\n    const { text, type = 'button' , ...rest} = props\n    return (\n        <div className={s.container}>\n            <button type={type} {...rest} className={s.button}>{text}</button>\n        </div>\n    )\n}\n","import React, { ChangeEvent } from 'react'\nimport s from './input.module.scss'\ntype InputType = 'text' | 'number'\n\ninterface Props {\n    type?: InputType,\n    placeholder?: string,\n    //formik props\n    id?: string,\n    name?: string,\n    label?: string,\n    value?: string\n    onChange?: (e: ChangeEvent<any>) => void\n    onBlur?: (e: ChangeEvent<any>) => void\n    error?: boolean | undefined\n    helperText?: string | false | undefined\n}\nexport default function Input(props: Props) {\n    const { type = 'text', placeholder, helperText, error, ...rest } = props\n    return (\n        <div>\n            <input placeholder={placeholder} {...rest} type={type} className={s.input} />\n            {error && <p className='error'>{helperText}</p>}\n        </div>\n\n    )\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport s from './input.module.scss'\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\ntype InputType = 'text' | 'number'\n\ninterface Props {\n    placeholder: string,\n    //formik props\n    id?: string,\n    name?: string,\n    label?: string,\n    value?: string\n    onChange?: (e: ChangeEvent<any>) => void\n    onBlur?: (e: ChangeEvent<any>) => void\n    error?: boolean | undefined\n    helperText?: string | false | undefined\n}\nexport default function InputPassword(props: Props) {\n    const { placeholder, helperText, error, ...rest } = props\n\n    const [isShowPassword, setIsShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => setIsShowPassword((show) => !show);\n    return (\n        <div>\n            <div className={s.container}>\n                <input placeholder={placeholder} {...rest} type={isShowPassword ? 'text' : 'password'} className={s.input} />\n                {isShowPassword ? <Visibility onClick={handleClickShowPassword} className={s.icon} /> : <VisibilityOff onClick={handleClickShowPassword} className={s.icon} />}\n            </div>\n            {error && <p className='error'>{helperText}</p>}\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"input_error__OfYDR\",\"title\":\"input_title__xtmVx\",\"text\":\"input_text__aUjj7\",\"dataContainer\":\"input_dataContainer__Ia7H8\",\"input\":\"input_input__VaHsI\",\"icon\":\"input_icon__7BwGD\",\"container\":\"input_container__Hru8f\",\"date\":\"input_date__wBhL9\",\"label\":\"input_label__Wq-Ey\"};"],"names":["AuthLayout","_ref","children","title","_jsxs","className","s","container","_jsx","ChangePassword","errors","pending","email","useAppSelector","authSelector","dispatch","useAppDispatch","navigate","useNavigate","YupSchema","Yup","shape","resetToken","required","password","password_confirm","formik","useFormik","initialValues","validationSchema","onSubmit","async","changePassword","value","unwrap","useEffect","formContainer","form","handleSubmit","Input","id","name","label","placeholder","values","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","helperText","InputPassword","resetCode","Button","text","type","props","rest","button","input","isShowPassword","setIsShowPassword","useState","handleClickShowPassword","show","Visibility","onClick","icon","VisibilityOff"],"sourceRoot":""}